package ucmoudles.systemback.feign.config;import feign.RequestInterceptor;import feign.RequestTemplate;import org.apache.commons.lang3.StringUtils;import org.springframework.web.context.request.RequestContextHolder;import org.springframework.web.context.request.ServletRequestAttributes;import javax.servlet.http.Cookie;import javax.servlet.http.HttpServletRequest;import java.io.UnsupportedEncodingException;import java.net.URLDecoder;/** * @author 9527 * @ClassName FeignConfig * @Date 2020/2/13 * @Description TODO * @Version 1.0 */public class FeignConfig implements RequestInterceptor {    @Override    public void apply(RequestTemplate requestTemplate) {        HttpServletRequest httpServletRequest = this.getHttpServletRequest();        if (null != httpServletRequest) {            String token = getValueByCookie(httpServletRequest,"secretKey");            requestTemplate.header("secretKey", token);        }    }    private HttpServletRequest getHttpServletRequest() {        try {            return ((ServletRequestAttributes) RequestContextHolder.getRequestAttributes()).getRequest();        } catch (Exception e) {            e.printStackTrace();            return null;        }    }    private String getValueByCookie(HttpServletRequest request, String key) {        String cookievalue = null;        Cookie[] cookies = request.getCookies();        if (null != cookies && cookies.length != 0) {            for (int i = 0; i < cookies.length; i++) {                Cookie cookie = cookies[i];                if (cookie.getName().equals(key)) {                    // String value = cookie.getValue();                    try {                        cookievalue = URLDecoder.decode(cookie.getValue(), "UTF-8");                    } catch (UnsupportedEncodingException e) {                        e.printStackTrace();                    }                    // cookievalue = value;                    break;                }            }        }        return cookievalue;    }}