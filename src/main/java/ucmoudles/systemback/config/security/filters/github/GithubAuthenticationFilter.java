package ucmoudles.systemback.config.security.filters.github;import com.ucs.moudlecommon.params.sysuser.Find_UserInfoArg;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;import org.springframework.security.core.Authentication;import org.springframework.security.core.AuthenticationException;import org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter;import org.springframework.security.web.util.matcher.AntPathRequestMatcher;import ucmoudles.systemback.business.UserLoginCallBackBusiness;import javax.servlet.ServletException;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.io.IOException;/** * @author 9527 * @ClassName GithubAuthenticationFilter * @Date 2020/2/25 * @Description TODO * @Version 1.0 */public class GithubAuthenticationFilter extends AbstractAuthenticationProcessingFilter {    @Autowired    private UserLoginCallBackBusiness userLoginCallBackBusiness;    public GithubAuthenticationFilter(String defaultFilterProcessesUrl) {        super(new AntPathRequestMatcher(defaultFilterProcessesUrl, "GET"));    }    @Override    public Authentication attemptAuthentication(HttpServletRequest request, HttpServletResponse response) throws AuthenticationException, IOException, ServletException {        UsernamePasswordAuthenticationToken authRequest = null;        try {            Find_UserInfoArg arg = userLoginCallBackBusiness.githubCallback(request);            authRequest = new UsernamePasswordAuthenticationToken(arg.getTempToken(),arg);        }catch (Exception e){            e.printStackTrace();        }        return this.getAuthenticationManager().authenticate(authRequest);    }}